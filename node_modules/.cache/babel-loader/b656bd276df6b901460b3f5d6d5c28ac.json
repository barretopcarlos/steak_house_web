{"ast":null,"code":"var _jsxFileName = \"C:\\\\aulas_react\\\\steakhouse_web\\\\src\\\\components\\\\Register.js\";\nimport React from 'react';\nimport { Row, Card, Input, Button } from 'react-materialize';\nimport * as services from '../services/steakhouseServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Register extends React.Component {\n  //construtor da classe\n  constructor(props) {\n    super(props); //declarando o state do componente\n    //definindo todos os atributos que o componente irá armazenar\n\n    this.state = {\n      nome: '',\n      email: '',\n      telefone: '',\n      senha: '',\n      senhaConfirmacao: '',\n      result: {\n        mensagem_sucesso: '',\n        mensagem_erro: '',\n        erros_validacao: {\n          nome: [],\n          email: [],\n          telefone: [],\n          senha: [],\n          senhaConfirmacao: []\n        }\n      }\n    }; //forçar o componente a sempre registrar estas funções a cada mudança de state\n    //com exceção da função render, todas as funções criadas em um componente que\n    //precisam manipular o state devem ser registradas no construtor com 'bind'\n\n    this.handleNome = this.handleNome.bind(this);\n    this.handleEmail = this.handleEmail.bind(this);\n    this.handleTelefone = this.handleTelefone.bind(this);\n    this.handleSenha = this.handleSenha.bind(this);\n    this.handleSenhaConfirmacao = this.handleSenhaConfirmacao.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } //funções para capturar o evento change em cada campo\n\n\n  handleNome(e) {\n    this.setState({\n      nome: e.target.value\n    });\n  }\n\n  handleEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  handleTelefone(e) {\n    this.setState({\n      telefone: e.target.value\n    });\n  }\n\n  handleSenha(e) {\n    this.setState({\n      senha: e.target.value\n    });\n  }\n\n  handleSenhaConfirmacao(e) {\n    this.setState({\n      senhaConfirmacao: e.target.value\n    });\n  } //função para processar o evento SUBMIT do formulário\n\n\n  handleSubmit(e) {\n    e.preventDefault(); //anular o SUBMIT POST do formulário\n    //limpar as mensagens..\n\n    this.setState({\n      result: {\n        mensagem_sucesso: '',\n        //limpando mensagem de sucesso\n        mensagem_erro: '',\n        //limpando mensagem de erro\n        erros_validacao: {\n          //limpando erros de validação\n          nome: [],\n          email: [],\n          telefone: [],\n          senha: [],\n          senhaConfirmacao: []\n        }\n      }\n    }); //executando a chamada da API..\n\n    services.postCliente(this.state).then( //promisse de sucesso da API\n    data => {\n      //limpar os campos do formulário..\n      this.setState({\n        nome: '',\n        email: '',\n        telefone: '',\n        senha: '',\n        senhaConfirmacao: '',\n        result: {\n          mensagem_sucesso: data.message\n        }\n      });\n    }).catch( //promisse de erro da API\n    e => {\n      var error = e.response;\n\n      switch (error.status) {\n        case 400:\n          console.log(error);\n          break;\n\n        case 500:\n          //exibir mensagem de erro..\n          this.setState({\n            result: {\n              mensagem_erro: error.data.message\n            }\n          });\n          break;\n      }\n    });\n  } //função para renderizar o conteudo HTML do componente..\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Crie sua Conta de Cliente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"green-text text-darken-4\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: this.state.result.mensagem_sucesso\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"red-text text-darken-4\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: this.state.result.mensagem_erro\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          autoComplete: \"false\",\n          method: \"post\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              label: \"Nome do Cliente\",\n              placeholder: \"Ex: Jo\\xE3o da Silva\",\n              type: \"text\",\n              name: \"nome\",\n              s: 12,\n              onChange: this.handleNome,\n              value: this.state.nome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              label: \"Email\",\n              placeholder: \"Ex: joaodasilva@gmail.com\",\n              type: \"email\",\n              name: \"email\",\n              s: 12,\n              onChange: this.handleEmail,\n              value: this.state.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              label: \"Telefone\",\n              placeholder: \"Ex: 21969575900\",\n              type: \"text\",\n              name: \"telefone\",\n              s: 12,\n              onChange: this.handleTelefone,\n              value: this.state.telefone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              label: \"Senha de Acesso\",\n              placeholder: \"Digite aqui\",\n              type: \"password\",\n              name: \"senha\",\n              s: 12,\n              onChange: this.handleSenha,\n              value: this.state.senha\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              label: \"Confirme sua Senha\",\n              placeholder: \"Digite aqui\",\n              type: \"password\",\n              name: \"senhaConfirmacao\",\n              s: 12,\n              onChange: this.handleSenhaConfirmacao,\n              value: this.state.senhaConfirmacao\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"right deep-orange\",\n              children: \"Realizar Cadastro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/aulas_react/steakhouse_web/src/components/Register.js"],"names":["React","Row","Card","Input","Button","services","Register","Component","constructor","props","state","nome","email","telefone","senha","senhaConfirmacao","result","mensagem_sucesso","mensagem_erro","erros_validacao","handleNome","bind","handleEmail","handleTelefone","handleSenha","handleSenhaConfirmacao","handleSubmit","e","setState","target","value","preventDefault","postCliente","then","data","message","catch","error","response","status","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Card, Input, Button } from 'react-materialize';\r\nimport * as services from '../services/steakhouseServices';\r\n\r\nclass Register extends React.Component {\r\n\r\n  //construtor da classe\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    //declarando o state do componente\r\n    //definindo todos os atributos que o componente irá armazenar\r\n    this.state = {\r\n      nome: '',\r\n      email: '',\r\n      telefone: '',\r\n      senha: '',\r\n      senhaConfirmacao: '',\r\n      result : {\r\n        mensagem_sucesso : '',\r\n        mensagem_erro : '',\r\n        erros_validacao : {\r\n          nome : [], \r\n          email : [],\r\n          telefone : [],\r\n          senha : [],\r\n          senhaConfirmacao : []\r\n        }\r\n      }\r\n    }\r\n\r\n    //forçar o componente a sempre registrar estas funções a cada mudança de state\r\n    //com exceção da função render, todas as funções criadas em um componente que\r\n    //precisam manipular o state devem ser registradas no construtor com 'bind'\r\n    this.handleNome = this.handleNome.bind(this);\r\n    this.handleEmail = this.handleEmail.bind(this);\r\n    this.handleTelefone = this.handleTelefone.bind(this);\r\n    this.handleSenha = this.handleSenha.bind(this);\r\n    this.handleSenhaConfirmacao = this.handleSenhaConfirmacao.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  //funções para capturar o evento change em cada campo\r\n  handleNome(e) { this.setState({ nome: e.target.value }) }\r\n  handleEmail(e) { this.setState({ email: e.target.value }) }\r\n  handleTelefone(e) { this.setState({ telefone: e.target.value }) }\r\n  handleSenha(e) { this.setState({ senha: e.target.value }) }\r\n  handleSenhaConfirmacao(e) { this.setState({ senhaConfirmacao: e.target.value }) }\r\n\r\n  //função para processar o evento SUBMIT do formulário\r\n  handleSubmit(e) {\r\n    e.preventDefault(); //anular o SUBMIT POST do formulário\r\n\r\n    //limpar as mensagens..\r\n    this.setState({\r\n      result : {\r\n        mensagem_sucesso : '', //limpando mensagem de sucesso\r\n        mensagem_erro : '', //limpando mensagem de erro\r\n        erros_validacao : { //limpando erros de validação\r\n          nome : [], \r\n          email : [],\r\n          telefone : [],\r\n          senha : [],\r\n          senhaConfirmacao : []\r\n        }\r\n      }\r\n    });\r\n\r\n    //executando a chamada da API..\r\n    services.postCliente(this.state)\r\n      .then( //promisse de sucesso da API\r\n        data => {\r\n\r\n          //limpar os campos do formulário..\r\n          this.setState({\r\n            nome: '',\r\n            email: '',\r\n            telefone: '',\r\n            senha: '',\r\n            senhaConfirmacao: '',\r\n            result: {\r\n              mensagem_sucesso : data.message\r\n            }\r\n          })\r\n\r\n        }\r\n      )\r\n      .catch( //promisse de erro da API\r\n        e => {\r\n          \r\n          var error = e.response;\r\n\r\n          switch(error.status){\r\n\r\n            case 400:\r\n              console.log(error);\r\n              break;\r\n\r\n            case 500:\r\n              //exibir mensagem de erro..\r\n              this.setState({\r\n                result : {\r\n                  mensagem_erro : error.data.message\r\n                }\r\n              })\r\n              break;\r\n          }\r\n\r\n        }\r\n      )\r\n  }\r\n\r\n  //função para renderizar o conteudo HTML do componente..\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Card>\r\n          <h4><strong>Crie sua Conta de Cliente</strong></h4>\r\n\r\n          <h5 className=\"green-text text-darken-4\">\r\n            <strong>{this.state.result.mensagem_sucesso}</strong>\r\n          </h5>\r\n\r\n          <h5 className=\"red-text text-darken-4\">\r\n            <strong>{this.state.result.mensagem_erro}</strong>\r\n          </h5>\r\n\r\n          <br/>\r\n\r\n          <form autoComplete=\"false\" method=\"post\" onSubmit={this.handleSubmit}>\r\n\r\n            <Row>\r\n              <Input\r\n                label=\"Nome do Cliente\"\r\n                placeholder=\"Ex: João da Silva\"\r\n                type=\"text\"\r\n                name=\"nome\"\r\n                s={12}\r\n                onChange={this.handleNome}\r\n                value={this.state.nome}\r\n              />\r\n            </Row>\r\n\r\n            <Row>\r\n              <Input\r\n                label=\"Email\"\r\n                placeholder=\"Ex: joaodasilva@gmail.com\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                s={12}\r\n                onChange={this.handleEmail}\r\n                value={this.state.email}\r\n              />\r\n            </Row>\r\n\r\n            <Row>\r\n              <Input\r\n                label=\"Telefone\"\r\n                placeholder=\"Ex: 21969575900\"\r\n                type=\"text\"\r\n                name=\"telefone\"\r\n                s={12}\r\n                onChange={this.handleTelefone}\r\n                value={this.state.telefone}\r\n              />\r\n            </Row>\r\n\r\n            <Row>\r\n              <Input\r\n                label=\"Senha de Acesso\"\r\n                placeholder=\"Digite aqui\"\r\n                type=\"password\"\r\n                name=\"senha\"\r\n                s={12}\r\n                onChange={this.handleSenha}\r\n                value={this.state.senha}\r\n              />\r\n            </Row>\r\n\r\n            <Row>\r\n              <Input\r\n                label=\"Confirme sua Senha\"\r\n                placeholder=\"Digite aqui\"\r\n                type=\"password\"\r\n                name=\"senhaConfirmacao\"\r\n                s={12}\r\n                onChange={this.handleSenhaConfirmacao}\r\n                value={this.state.senhaConfirmacao}\r\n              />\r\n            </Row>\r\n\r\n            <Row>\r\n              <Button\r\n                type=\"submit\"\r\n                className=\"right deep-orange\"\r\n              >\r\n                Realizar Cadastro\r\n            </Button>\r\n            </Row>\r\n\r\n          </form>\r\n\r\n        </Card>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Register;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}